define(function(require, exports, module){
  require("vendor/jade"); 
  module.exports = function anonymous(locals, attrs, escape, rethrow) {
var attrs = jade.attrs, escape = jade.escape, rethrow = jade.rethrow;
var buf = [];
with (locals || {}) {
var interp;
buf.push('<div');
buf.push(attrs({ "class": ('fields') }));
buf.push('><div');
buf.push(attrs({ "class": ('input-row') + ' ' + ('url') }));
buf.push('><div');
buf.push(attrs({ "class": ('label') }));
buf.push('>URL</div><div');
buf.push(attrs({ "class": ('field') }));
buf.push('><div');
buf.push(attrs({ "class": ('btn') + ' ' + ('edit') }));
buf.push('>Edit</div><div');
buf.push(attrs({ "class": ('note-indicator') }));
buf.push('></div><input');
buf.push(attrs({ "class": ('text') + ' ' + ('url') }));
buf.push('/></div><div');
buf.push(attrs({ "class": ('note') }));
buf.push('></div></div><div');
buf.push(attrs({ "class": ('input-row') + ' ' + ('path') }));
buf.push('><div');
buf.push(attrs({ "class": ('label') }));
buf.push('>Source directory</div><div');
buf.push(attrs({ "class": ('field') }));
buf.push('><div');
buf.push(attrs({ "class": ('btn') + ' ' + ('browse') + ' ' + ('browse-source') }));
buf.push('>Browse</div><div');
buf.push(attrs({ "class": ('note-indicator') }));
buf.push('></div><div');
buf.push(attrs({ "class": ('input-container') }));
buf.push('><input');
buf.push(attrs({ "class": ('text') + ' ' + ('path') }));
buf.push('/><div');
buf.push(attrs({ "class": ('completion-pfx') }));
buf.push('></div><div');
buf.push(attrs({ "class": ('completion-sfx') }));
buf.push('></div></div></div><div');
buf.push(attrs({ "class": ('note') }));
buf.push('>No such directory was found on your hard drive.</div></div><div');
buf.push(attrs({ "class": ('input-row') + ' ' + ('type') }));
buf.push('><div');
buf.push(attrs({ "class": ('label') }));
buf.push('>Source file format</div><div');
buf.push(attrs({ "class": ('field') }));
buf.push('><input');
buf.push(attrs({ 'type':("radio"), 'name':("type"), 'value':("css"), 'id':("type_css_" + id), "class": ('type') }));
buf.push('/><label');
buf.push(attrs({ 'for':("type_css_" + id) }));
buf.push('>CSS</label><input');
buf.push(attrs({ 'type':("radio"), 'name':("type"), 'value':("stylus"), 'id':("type_stylus_" + id), "class": ('type') }));
buf.push('/><label');
buf.push(attrs({ 'for':("type_stylus_" + id) }));
buf.push('>Stylus</label></div><div');
buf.push(attrs({ "class": ('conversion-hint') }));
buf.push('></div></div><div');
buf.push(attrs({ "class": ('input-row') + ' ' + ('missing-files') }));
buf.push('><div');
buf.push(attrs({ "class": ('label') }));
buf.push('>When files are missing</div><div');
buf.push(attrs({ "class": ('field') }));
buf.push('><input');
buf.push(attrs({ 'type':("radio"), 'name':("missing"), 'value':("ignore"), 'id':("missing_ignore_" + id), "class": ('missing-files') }));
buf.push('/><label');
buf.push(attrs({ 'for':("missing_ignore_" + id) }));
buf.push('>Ignore</label><input');
buf.push(attrs({ 'type':("radio"), 'name':("missing"), 'value':("create"), 'id':("missing_create_" + id), "class": ('missing-files') }));
buf.push('/><label');
buf.push(attrs({ 'for':("missing_create_" + id) }));
buf.push('>Create new files</label></div></div><div');
buf.push(attrs({ "class": ('input-row') + ' ' + ('stylus-out') }));
buf.push('><div');
buf.push(attrs({ "class": ('label') }));
buf.push('>Stylus output directory</div><div');
buf.push(attrs({ "class": ('field') }));
buf.push('><div');
buf.push(attrs({ "class": ('btn') + ' ' + ('browse') + ' ' + ('browse-stylus-out') }));
buf.push('>Browse</div><div');
buf.push(attrs({ "class": ('note-indicator') }));
buf.push('></div><div');
buf.push(attrs({ "class": ('input-container') }));
buf.push('><input');
buf.push(attrs({ "class": ('text') + ' ' + ('stylus-out') }));
buf.push('/><div');
buf.push(attrs({ "class": ('completion-pfx') }));
buf.push('></div><div');
buf.push(attrs({ "class": ('completion-sfx') }));
buf.push('></div></div></div><div');
buf.push(attrs({ "class": ('note') }));
buf.push('>No such directory was found on your hard drive.</div></div><div');
buf.push(attrs({ "class": ('stylus-switch-hint') }));
buf.push('>Although Styler fully supports editing CSS stylesheets we encourage you to have a look at Stylus.\nStylus improves CSS format with many great features that help you become more productive.\nYou can learn more about Stylus from\n<a');
buf.push(attrs({ 'href':("http://learnboost.github.com/stylus/"), 'target':("_blank") }));
buf.push('>here</a>. You may also choose CSS for now and return later to this view to switch between formats.\n<div');
buf.push(attrs({ "class": ('btn') + ' ' + ('convert') }));
buf.push('>Convert all files in this location to Stylus format</div><div');
buf.push(attrs({ "class": ('clear') }));
buf.push('></div></div></div><div');
buf.push(attrs({ "class": ('locations-info') }));
buf.push('><div');
buf.push(attrs({ "class": ('head-note') }));
buf.push('><div');
buf.push(attrs({ "class": ('msg') + ' ' + ('no-url') }));
buf.push('>Please select the URL for the CSS files location.</div><div');
buf.push(attrs({ "class": ('msg') + ' ' + ('no-files') }));
buf.push('>No CSS files were found from your page that match this URL.</div><div');
buf.push(attrs({ "class": ('msg') + ' ' + ('has-files') }));
buf.push('>This location contains following files:</div></div><div');
buf.push(attrs({ "class": ('file-list') }));
buf.push('></div><div');
buf.push(attrs({ "class": ('foot-note') }));
buf.push('><div');
buf.push(attrs({ "class": ('msg') + ' ' + ('no-matches') }));
buf.push('>No matching source files were found from the source directory.</div><div');
buf.push(attrs({ "class": ('msg') + ' ' + ('some-matches') }));
buf.push('><span');
buf.push(attrs({ "class": ('num-matches') }));
buf.push('></span>of\n<span');
buf.push(attrs({ "class": ('num-files') }));
buf.push('></span>files were matched with the source files.\n</div><div');
buf.push(attrs({ "class": ('msg') + ' ' + ('all-matches') }));
buf.push('>All files matched the source files.</div></div></div><div');
buf.push(attrs({ "class": ('btn') + ' ' + ('remove') }));
buf.push('>Remove this location\n</div><div');
buf.push(attrs({ "class": ('clear') }));
buf.push('></div>');
}
return buf.join("");
};
});